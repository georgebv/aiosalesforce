[project]
name = "aiosalesforce"
dynamic = ["version"]
dependencies = [
    "httpx>=0.27.0",
    "orjson>=3.9.15",
    "pyjwt[crypto]>=2.8",
]
requires-python = ">= 3.11"
authors = [
    { name = "Georgii Bocharov", email = "bocharovgeorgii@gmail.com" }
]
description = "Salesforce REST API client"
readme = "README.md"
license = { file = "LICENSE" }
keywords = [
    "salesforce",
    "asyncio",
    "REST API",
]

[project.urls]
Homepage = "https://github.com/georgebv/aiosalesforce"
Documentation = "https://github.com/georgebv/aiosalesforce"
Repository = "https://github.com/georgebv/aiosalesforce"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    # Linting
    "ruff>=0.3.0",
    "mypy>=1.8.0",
    # Documentation
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.13",
    "mkdocstrings[python]>=0.24.1",
    # Testing
    "pytest>=8.0.2",
    "pytest-asyncio>=0.23.5.post1",
    "pytest-cov>=4.1.0",
    "respx>=0.20.2",
    "time-machine>=2.14.0",
    # Development
    "pre-commit>=3.7.0",
]

[tool.hatch.version]
path = "src/aiosalesforce/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
include = [
    "src/aiosalesforce/**/*.py",
    "src/aiosalesforce/py.typed",
    "README.md",
    "LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/aiosalesforce"]

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules
select = [
    # Pyflakes
    "F",
    # pycodestyle
    "E",
    # pep8-naming
    "N",
    # flake8-bandit
    "S",
    # flake8-comprehensions
    "C4",
    # flake8-logging-format
    "G",
    # flake8-print
    "T20",
    # flake8-use-pathlib
    "PTH",
    # Pylint
    "PL",
    # Ruff-specific rules
    "RUF",
]
ignore = [
    # Bandit: assert statement
    "S101",
    # `subprocess` call: check for execution of untrusted input
    "S603", "S607",
    # `open()` should be replaced by `Path.open()`
    "PTH123",
    # Magic value used in comparison
    "PLR2004",
    # Too many branches
    "PLR0912",
    # Too many arguments
    "PLR0913",
    # Too many statements
    "PLR0915",
    # Mutable class attributes should be annotated with `typing.ClassVar`
    "RUF012",
    # line too long
    "E501",
]

[tool.ruff.lint.isort]
lines-between-types = 1

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "-v --cov=aiosalesforce --cov-report=term --cov-report=xml --cov-report=html"
testpaths = [
    "tests",
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'raise AssertionError',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
    'def __repr__',
    'if TYPE_CHECKING:',
]
omit = [
    "tests/*",
]
precision = 1
skip_empty = true
sort = "-Cover"
